buildscript {
	dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins", version: "3.5.23"
		classpath group: "org.osgi", name: "org.osgi.core", version: "6.0.0"
	}

	repositories {
		maven {
			url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
		}
	}
}

apply plugin: "com.liferay.osgi.plugin"

import org.osgi.framework.Version

def groupId = "com.liferay"
def artifactId = "com.liferay.blade.basic.web"
def version = "1.0.0"
def jarName = artifactId + "-" + version + ".jar"
def targetDependencyDir = buildDir.toString() + '/targetDependency'
def unzippedDir = targetDependencyDir + '/unzipped'

dependencies {
	compile group: groupId, name: artifactId, version: version
}

repositories {
	mavenLocal()

	mavenCentral()

	maven {
		url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
	}
}

task copyTargetDependency(type: Copy, dependsOn: jar) {
	group 'Liferay Module Customizer'
	description 'Downloads the target module (i.e., the module to be customized)'

	from configurations.compile {
		include jarName
	}
	into targetDependencyDir
}

task unzipTargetDependency(type: Copy, dependsOn: copyTargetDependency) {
	group 'Liferay Module Customizer'
	description 'Unzips the target module (i.e., the module to be customized)'

	def zipFile = file(targetDependencyDir + '/' + jarName)
	def toDir = file(unzippedDir)

	from zipTree(zipFile)
	into toDir
}

task overlayJava(type: Copy, dependsOn: unzipTargetDependency) {
	group 'Liferay Module Customizer'
	description 'Copies the .class files of the customized Java source files to the unzipped target module'

	def fromDir = file(buildDir.toString() + '/classes/main')
	def toDir = file(unzippedDir)

	from fromDir
	into toDir
}

task overlayResources(type: Copy, dependsOn: overlayJava) {
	group 'Liferay Module Customizer'
	description 'Copies the customized resource files to the unzipped target module'

	def fromDir = file(buildDir.toString() + '/resources/main')
	def toDir = file(unzippedDir)

	from fromDir
	into toDir
	
	ext.updateBundleVersion = { File manifestFile ->
		final String BUNDLE_VERSION = "Bundle-Version:"
		def manifestLines = manifestFile.readLines()
		def sb = new StringBuilder()

		for (String line : manifestLines) {
			if (line.startsWith(BUNDLE_VERSION)) {
				def versionLine = new String(line)
				versionLine = versionLine.replaceFirst(BUNDLE_VERSION, "").trim()
				Version osgiVersion = Version.parseVersion(versionLine)
				def qualifier = osgiVersion.getQualifier()
				def suffix = 'customized'

				if (qualifier.isEmpty()) {
					line = line + '.' + suffix
				}
				else {
					line = line + '-' + suffix
				}
			}
			
			sb.append(line)
			sb.append('\n')
		}
	
		def newManifestStr = sb.toString()
		manifestFile.setText(newManifestStr, 'UTF-8')
	}
	
	doLast {
		def manifestFile = new File(unzippedDir + '/META-INF/MANIFEST.MF')
		updateBundleVersion(manifestFile)
	}
}

task buildJar(type: Zip, dependsOn: overlayResources) {
	group 'Liferay Module Customizer'
	description 'Creates the customized .jar file'

	from(unzippedDir) {
		include '**/MANIFEST.MF'
	}
	from(unzippedDir) {
		exclude '**/MANIFEST.MF'
	}

	archiveName artifactId + '-' + version + '-customized.jar'
	destinationDir(buildDir)
}
